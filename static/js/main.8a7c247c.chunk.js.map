{"version":3,"sources":["toptal.gif","App.tsx","confdata.ts","serviceWorker.js","index.js"],"names":["module","exports","JSONtoCSV","arr","columns","Object","keys","delimiter","join","map","obj","reduce","acc","key","length","countriesList","countries","results","sort","a","b","at","text","toUpperCase","bt","confUrl","countryId","aggLevel","parseInt","App","rviz","useRef","rstack","colorConfig","useState","year","setYear","setAggLevel","agronegocio","setAgronegocio","country","setCountry","url","setUrl","subdiv","setSubdiv","data","setData","trade","setTrade","loading","setLoading","useEffect","fetch","cache","res","json","console","log","dataset","fetchUrl","agro","aggrLevel","yr","cmdCode","cmdDescE","TradeValue","qtCode","qtDesc","TradeQuantity","value","rest","cmdCode2","substr","cmdCode4","cmdCode6","cmdDesc2","hsDesc","cmdDesc4","cmdDesc6","sps","sps6","sps4","agro2","agro4","flat","filter","item","includes","confData","current","color","className","href","target","rel","onChange","e","currentTarget","id","type","name","checked","onClick","CSV","blob","Blob","saveAs","find","saveCSV","src","logo","alt","Treemap","config","groupBy","sum","time","downloadButton","downloadConfig","legend","total","d","totalConfig","fontSize","fontWeight","padding","height","depth","title","titleConfig","timelineConfig","on","end","undefined","Array","isArray","getFullYear","ref","StackedArea","y","x","downloadPosition","xConfig","shapeConfig","labelConfig","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","onUpdate","onSuccess","catch","error","ReactDOM","render","document","getElementById","URL","process","origin","addEventListener","response","contentType","headers","get","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.8a7c247c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/toptal.459e0ba8.gif\";","import { useEffect, useRef, useState } from 'react'\r\nimport React from 'react'\r\nimport { Treemap, StackedArea } from 'd3plus-react'\r\nimport { saveAs } from 'file-saver'\r\nimport { confData } from './confdata'\r\nimport countries from './json/partnerAreas.json'\r\nimport logo from './toptal.gif'\r\nimport './App.css'\r\n\r\nconst JSONtoCSV = (arr: any[], columns: string[] = Object.keys(arr[0]), delimiter = ',') =>\r\n  [\r\n    columns.join(delimiter),\r\n    ...arr.map(obj =>\r\n      columns.reduce(\r\n        (acc, key) => `${acc}${!acc.length ? '' : delimiter}\"${!obj[key] ? '' : obj[key]}\"`,\r\n        ''\r\n      )\r\n    ),\r\n  ].join('\\n')\r\n\r\nconst countriesList = countries.results.sort((a, b) => {\r\n  const at = a.text.toUpperCase()\r\n  const bt = b.text.toUpperCase()\r\n  return at < bt ? -1 : at > bt ? 1 : 0\r\n})\r\n\r\nfunction confUrl(countryId: string, aggLevel: number) {\r\n  return !!parseInt(countryId, 10) || countryId === 'all'\r\n    ? 'https://comtrade.un.org/api/get?max=50000&type=C&head=M&px=HS&fmt=json&' +\r\n        'freq=A&ps=2018%2C2017%2C2016%2C2015%2C2014&p=76&rg=1&cc=AG' +\r\n        aggLevel +\r\n        '&r=' +\r\n        countryId\r\n    : null\r\n}\r\n\r\nfunction App() {\r\n  const rviz = useRef(null)\r\n  const rstack = useRef(null)\r\n  const colorConfig = useRef({})\r\n\r\n  const [year, setYear] = useState<number | null>(null)\r\n  const [aggLevel, setAggLevel] = useState<number>(4)\r\n  const [agronegocio, setAgronegocio] = useState<boolean>(true)\r\n  const [country, setCountry] = useState<string>('0')\r\n  const [url, setUrl] = useState(confUrl(country, aggLevel))\r\n  const [subdiv, setSubdiv] = useState<boolean>(false)\r\n  const [data, setData] = useState<any[]>([])\r\n  const [trade, setTrade] = useState<any | null>(null)\r\n  const [loading, setLoading] = useState(true)\r\n\r\n  useEffect(() => {\r\n    async function fetchUrl() {\r\n      try {\r\n        if (url) {\r\n          setLoading(true)\r\n          setData([])\r\n          setTrade(null)\r\n          const res = await fetch(url, { cache: 'no-cache' })\r\n          const json = await res.json()\r\n          console.log('Fetch', json.dataset.length)\r\n          setTrade(json)\r\n          console.log('Fetch', json.dataset.length)\r\n        }\r\n      } catch (e) {\r\n        console.log(e)\r\n      }\r\n      setLoading(false)\r\n    }\r\n    fetchUrl()\r\n  }, [url, aggLevel])\r\n\r\n  useEffect(() => {\r\n    if (trade && trade.dataset.length) {\r\n      setData(confData(trade, agronegocio))\r\n    }\r\n  }, [trade, agronegocio])\r\n\r\n  useEffect(() => {\r\n    setUrl(confUrl(country, aggLevel))\r\n  }, [country, aggLevel])\r\n\r\n  useEffect(() => {\r\n    //;(window as any).viz = rviz\r\n    //;(window as any).stack = rstack\r\n    //@ts-ignore\r\n    console.log(year)\r\n  })\r\n\r\n  useEffect(() => {\r\n    colorConfig.current = subdiv ? { color: 'cmdDesc2' } : {}\r\n  }, [subdiv])\r\n\r\n  const saveCSV = () => {\r\n    const CSV = JSONtoCSV(data)\r\n    var blob = new Blob([CSV], { type: 'text/plain;charset=utf-8' })\r\n    saveAs(\r\n      blob,\r\n      'comtrade-brazil-' + countries.results.find(item => item.id === country)!.text + '.csv'\r\n    )\r\n  }\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <h1>Gerador de Gráficos das Exportações do Agronegócio Brasileiro </h1>\r\n        <h2>\r\n          Gera mapas do tipo Treemap e Staked para dados do{' '}\r\n          <a\r\n            href=\"https://comtrade.un.org\"\r\n            className=\"App-link\"\r\n            target=\"_blank\"\r\n            rel=\"noopener noreferrer\"\r\n          >\r\n            COMTRADE\r\n          </a>\r\n        </h2>\r\n      </header>\r\n      <br />\r\n      <br />\r\n      <div className=\"App-subheader\">\r\n        <div className=\"box\">\r\n          País Importador :\r\n          <select\r\n            value={country}\r\n            onChange={(e: React.FormEvent<HTMLSelectElement>) => setCountry(e.currentTarget.value)}\r\n          >\r\n            {countriesList.map(item => (\r\n              <option value={item.id} key={item.id}>\r\n                {item.text}\r\n              </option>\r\n            ))}\r\n          </select>\r\n          <br />\r\n        </div>\r\n        <div className=\"box\">\r\n          Nível de Agregação:\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"4\"\r\n              name=\"aggLevel\"\r\n              checked={aggLevel === 4}\r\n              onChange={() => setAggLevel(4)}\r\n            />\r\n            HS4\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"6\"\r\n              name=\"aggLevel\"\r\n              checked={aggLevel === 6}\r\n              onChange={() => setAggLevel(6)}\r\n            />\r\n            HS6\r\n          </label>\r\n          <br />\r\n        </div>\r\n        <div className=\"box\">\r\n          Produtos:\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"sps\"\r\n              name=\"agronegocio\"\r\n              checked={agronegocio === false}\r\n              onChange={() => setAgronegocio(false)}\r\n            />\r\n            Acordo SPS\r\n          </label>\r\n          <label>\r\n            <input\r\n              type=\"radio\"\r\n              value=\"agronegocio\"\r\n              name=\"agronegocio\"\r\n              checked={agronegocio === true}\r\n              onChange={() => setAgronegocio(true)}\r\n            />\r\n            Agronegócio\r\n          </label>\r\n          <br />\r\n        </div>\r\n        <div className=\"box\">\r\n          <label>\r\n            <input\r\n              type=\"checkbox\"\r\n              value=\"4\"\r\n              name=\"subdiv\"\r\n              checked={subdiv === true}\r\n              onChange={() => setSubdiv(!subdiv)}\r\n            />\r\n            Mostrar subdivisões\r\n          </label>\r\n        </div>\r\n        <br />\r\n      </div>\r\n      {data && data.length ? (\r\n        <div>\r\n          <span>Dados carregados, com {data.length} linhas.</span>\r\n          <button onClick={() => saveCSV()}>Fazer download dos dados</button>\r\n        </div>\r\n      ) : null}\r\n      <hr />\r\n      <div>\r\n        <br />\r\n        {data.length === 0 && !loading ? (\r\n          <span>\r\n            <h1>=> Selecione um país </h1>\r\n          </span>\r\n        ) : null}\r\n        {data.length === 0 && loading ? (\r\n          <span>\r\n            <h1>Aguarde! Carregando</h1>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          </span>\r\n        ) : null}\r\n        {data.length !== 0 && !loading ? (\r\n          <div>\r\n            <Treemap\r\n              config={{\r\n                groupBy: ['cmdDesc2', 'cmdDesc4', 'cmdDesc6'],\r\n                sum: 'value',\r\n                time: 'yr',\r\n                downloadButton: true,\r\n                downloadConfig: { type: 'jpg' },\r\n                legend: false,\r\n                total: (d: any) => d.value,\r\n                totalConfig: {\r\n                  text: (d: any) => d.text,\r\n                  fontSize: 12,\r\n                  fontWeight: 600,\r\n                  padding: 5,\r\n                },\r\n                height: 600,\r\n                data: data,\r\n                depth: subdiv ? 1 : 0,\r\n                title:\r\n                  'Exports from Brazil to ' +\r\n                  countries.results.find(item => item.id === country)!.text,\r\n                titleConfig: { fontSize: 20, fontWeight: 600 },\r\n                timelineConfig: {\r\n                  on: {\r\n                    end: (d: Date[] | Date) => {\r\n                      if (d !== undefined) {\r\n                        const time = Array.isArray(d)\r\n                          ? d.map(item => item.getFullYear())\r\n                          : [d.getFullYear()]\r\n                        setYear(time[0])\r\n                      }\r\n                      return true\r\n                    },\r\n                  },\r\n                },\r\n                ...colorConfig.current,\r\n              }}\r\n              ref={rviz}\r\n            />\r\n            <br />\r\n            <br />\r\n            <StackedArea\r\n              config={{\r\n                data: data,\r\n                groupBy: ['cmdDesc2', 'cmdDesc4', 'cmdDesc6'],\r\n                y: 'value',\r\n                x: 'yr',\r\n                legend: false,\r\n                depth: 0,\r\n                downloadButton: true,\r\n                downloadPosition: 'top',\r\n                xConfig: {\r\n                  shapeConfig: {\r\n                    labelConfig: {\r\n                      fontSize: () => 20,\r\n                    },\r\n                  },\r\n                },\r\n                shapeConfig: { fontSize: 20 },\r\n                labelConfig: { fontSize: 20 },\r\n                height: 600,\r\n                title:\r\n                  'Exports from Brazil to ' +\r\n                  countries.results.find(item => item.id === country)!.text,\r\n                titleConfig: { fontSize: 20, fontWeight: 600 },\r\n              }}\r\n              ref={rstack}\r\n            />\r\n          </div>\r\n        ) : null}\r\n      </div>\r\n\r\n      <br />\r\n      <br />\r\n      <br />\r\n      <hr />\r\n      <br />\r\n      <div className=\"App-subheader\">\r\n        <h3>Códigos HS do Acordo SPS Agricultura</h3>\r\n        <p>\r\n          01, 02, 03, 04, 05, 06, 07, 08, 09, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22,\r\n          23, 24\r\n        </p>\r\n        <p>290543, 290544, 380910, 382360</p>\r\n        <p>\r\n          3301, 3501, 3502, 3503, 3504, 3505, 4101, 4102, 4103, 4301, 5001, 5002, 5003, 5101, 5102,\r\n          5103, 5201, 5202, 5203, 5301, 5302\r\n        </p>\r\n        <h3>Códigos HS Adicionais para o Agronegócio</h3>\r\n        <p>44, 45, 46, 47, 48, 94</p>\r\n        <p>\r\n          4101, 4102, 4103, 4104, 4105, 4106, 4107, 4108, 4109, 4110, 4111, 4112, 4113, 4114, 4115\r\n        </p>\r\n        <p>4201, 4202, 4203, 4204, 4205, 4206, 4301, 4302, 4303</p>\r\n        <p>6401, 6402, 6403, 6404, 6405, 6406, 3201, 3203, 6005, 4001</p>\r\n        <p>5304, 5305, 5306, 5307, 5308, 5309, 5310, 5311</p>\r\n      </div>\r\n      <br />\r\n      <h4>\r\n        Código Fonte{' '}\r\n        <a href=\"https://github.com/dalcib/d3plus-conf\">https://github.com/dalcib/d3plus-conf</a>\r\n      </h4>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","import hsDesc from './json/hsDesc.json'\r\n\r\ntype hsDesc = { [key: string]: string }\r\n\r\ntype trade = {\r\n  yr: number\r\n  cmdCode: string\r\n  cmdDescE: string\r\n  cmdCode2: string\r\n  cmdDesc2: string\r\n  cmdCode4: string\r\n  cmdDesc4: string\r\n  cmdCode6: string\r\n  cmdDesc6: string\r\n  qtCode: number\r\n  qtDesc: string\r\n  TradeQuantity: number\r\n  TradeValue: number\r\n}\r\n\r\nexport function confData(data: any, agro: boolean = true) {\r\n  const aggrLevel = data.dataset[0].aggrLevel\r\n\r\n  var trade: trade[] = data.dataset\r\n    .map(\r\n      ({ yr, cmdCode, cmdDescE, qtCode, qtDesc, TradeQuantity, TradeValue, ...rest }: trade) => ({\r\n        yr,\r\n        cmdCode,\r\n        cmdDescE,\r\n        value: TradeValue,\r\n      })\r\n    )\r\n    .map(({ cmdCode, cmdDescE, ...rest }: trade) => ({\r\n      cmdCode2: cmdCode.substr(0, 2),\r\n      cmdCode4: cmdCode.substr(0, 4),\r\n      cmdCode6: cmdCode,\r\n      cmdDescE,\r\n      ...rest,\r\n    }))\r\n    .map(({ cmdCode2, cmdCode4, cmdCode6, cmdDescE, ...rest }: trade) => ({\r\n      cmdCode2,\r\n      cmdDesc2: hsDesc[cmdCode2],\r\n      cmdCode4,\r\n      cmdDesc4: hsDesc[cmdCode4],\r\n      cmdCode6,\r\n      cmdDesc6: cmdCode6 + '- ' + cmdDescE,\r\n      ...rest,\r\n    }))\r\n\r\n  type na = string[]\r\n  // prettier-ignore\r\n  const sps: na = [\"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\", \"13\", \"14\", \"15\", \"16\", \"17\", \"18\", \"19\", \"20\", \"21\", \"22\", \"23\", \"24\"]\r\n  const sps6: na = ['290543', '290544', '380910', '382360']\r\n  // prettier-ignore\r\n  const sps4: na = [\"3301\", \"3501\", \"3502\", \"3503\", \"3504\", \"3505\", \"4101\", \"4102\", \"4103\", \"4301\", \"5001\", \"5002\", \"5003\", \"5101\", \"5102\", \"5103\", \"5201\", \"5202\", \"5203\", \"5301\", \"5302\"]\r\n  const agro2: na = ['44', '45', '46', '47', '48', '94']\r\n  // prettier-ignore\r\n  const agro4a: na = [\"4101\", \"4102\", \"4103\", \"4104\", \"4105\", \"4106\", \"4107\", \"4108\", \"4109\", \"4110\", \"4111\", \"4112\", \"4113\", \"4114\", \"4115\"]\r\n  const agro4b: na = ['4201', '4202', '4203', '4204', '4205', '4206', '4301', '4302', '4303']\r\n  // prettier-ignore\r\n  const agro4c: na = ['6401', '6402', '6403', '6404', '6405', '6406', '3201', '3203', '6005', '4001']\r\n  const agro4d: na = ['5304', '5305', '5306', '5307', '5308', '5309', '5310', '5311']\r\n  const agro4: na = [agro4a, agro4b, agro4c, agro4d].flat()\r\n\r\n  const tradeAgri = trade\r\n    .filter(\r\n      item =>\r\n        sps.includes(item.cmdCode2) ||\r\n        sps4.includes(item.cmdCode4) ||\r\n        sps6.includes(item.cmdCode6) ||\r\n        (agro2.includes(item.cmdCode2) && agro) ||\r\n        (agro4.includes(item.cmdCode4) && agro)\r\n    )\r\n    .map(({ cmdCode2, cmdCode4, cmdCode6, ...rest }) => ({ ...rest }))\r\n    .map(({ cmdDesc6, ...rest }) => {\r\n      if (aggrLevel === 4) {\r\n        return { ...rest }\r\n      } else {\r\n        return { cmdDesc6, ...rest }\r\n      }\r\n    })\r\n\r\n  return tradeAgri\r\n}\r\n\r\n//https://comtrade.un.org/api/get?max=50000&type=C&head=M&px=HS&freq=A&r=699&ps=2018%2C2017%2C2016%2C2015%2C2014&p=76&rg=1&cc=AG6&fmt=json\r\n\r\n//import { confData } from './confdata'\r\n//const comtrade = require('./json/comtrade.json')\r\n//const fs = require('fs')\r\n//const tradeAgri = confData({ data: comtrade })\r\n//fs.writeFileSync('tradeAgri.json', JSON.stringify(tradeAgri))\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react'\r\nimport ReactDOM from 'react-dom'\r\n//import './index.css';\r\nimport App from './App'\r\nimport * as serviceWorker from './serviceWorker'\r\n\r\nReactDOM.render(<App />, document.getElementById('root'))\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register()\r\n"],"sourceRoot":""}